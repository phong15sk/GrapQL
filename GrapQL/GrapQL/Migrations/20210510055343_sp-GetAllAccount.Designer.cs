// <auto-generated />
using System;
using GrapQL.Entities.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GrapQL.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20210510055343_sp-GetAllAccount")]
    partial class spGetAllAccount
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GrapQL.Model.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("49f1f78e-76e7-4438-a2f0-b6ea7f82effe"),
                            Description = "Cash account for our users",
                            OwnerId = new Guid("1138b434-5559-412d-bfed-a03c7c982c86"),
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("d047cd4a-d96b-4cf6-8143-e0d81a66450f"),
                            Description = "Savings account for our users",
                            OwnerId = new Guid("89c8f611-1c24-4466-b0ad-a35a35e14b87"),
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("8f7ec4b5-f1e9-4bab-a323-f39b02455a64"),
                            Description = "Income account for our users",
                            OwnerId = new Guid("89c8f611-1c24-4466-b0ad-a35a35e14b87"),
                            Type = 3
                        });
                });

            modelBuilder.Entity("GrapQL.Model.Owner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Owners");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1138b434-5559-412d-bfed-a03c7c982c86"),
                            Address = "John Doe's address",
                            Name = "John Doe"
                        },
                        new
                        {
                            Id = new Guid("89c8f611-1c24-4466-b0ad-a35a35e14b87"),
                            Address = "Jane Doe's address",
                            Name = "Jane Doe"
                        });
                });

            modelBuilder.Entity("GrapQL.Model.Account", b =>
                {
                    b.HasOne("GrapQL.Model.Owner", "Owner")
                        .WithMany("Accounts")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("GrapQL.Model.Owner", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
